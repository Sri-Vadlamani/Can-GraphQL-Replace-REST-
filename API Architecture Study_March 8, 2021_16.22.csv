StartDate,EndDate,Progress,Duration (in seconds),Finished,RecordedDate,ResponseId,DistributionChannel,UserLanguage,Q2,Q3,Q3_5_TEXT,Q4,Q5,Q6,Q7,Q9,Q10,Q11,Q12,Q13,Q14,Q15,Q16_1,Q16_2,Q16_3,Q16_4,Q16_5,Q16_6,Q16_7,Q16_8,Q16_9,Q16_10,Q16_11,Q17_1,Q17_2,Q17_3,Q18,Q19,Q20,Q21
Start Date,End Date,Progress,Duration (in seconds),Finished,Recorded Date,Response ID,Distribution Channel,User Language,Selecting the “I consent” option below indicates that I agree to participate in the study. This in no way constitutes a waiver of my rights.,How would you describe your role at GitHub? (Single Answer) - Selected Choice,How would you describe your role at GitHub? (Single Answer) - Other (please specify) - Text,"How many years of experience do you have in working on web systems and/or their ecosystem (tooling, documentation, managing a team, etc..)? (Single Answer)",What is your level of expertise with Representational State Transfer (REST) APIs? (Single Answer),What is your level of expertise with Graph Query Language (GraphQL) APIs? (Single Answer),Which of the following do you believe are benefits of GraphQL?,"What do you believe are benefits of GraphQL? (not already mentioned before) 
You can answer this with a paragraph or a list of phrases. Feel free to add as much detail as you'd like.",Which of the following do you believe are weaknesses of GraphQL (Multi Answer),"What do you believe are weaknesses of GraphQL? (not already mentioned before)
You can answer this with a paragraph or a list of phrases. Feel free to add as much detail as you'd like.",Which of the following do you believe are benefits of REST? (Multi Answer),"What do you believe are benefits of REST? (not already mentioned before) 
 You can answer this with a paragraph or a list of phrases. Feel free to add as much detail as you'd like.",Which of the following do you believe are weaknesses of REST? (Multi Answer),"What do you believe are weaknesses of REST? (not already mentioned before)
You can answer this with a paragraph or a list of phrases. Feel free to add as much detail as you'd like.","For each of the following scenarios, please indicate which API architecture(s) you would consider. - When developing an API first product for millions of users to use","For each of the following scenarios, please indicate which API architecture(s) you would consider. - When developing an internal web service for other internal services to interact with","For each of the following scenarios, please indicate which API architecture(s) you would consider. - When developing an API for multiple different clients to use","For each of the following scenarios, please indicate which API architecture(s) you would consider. - When developing a mission-critical real-time API","For each of the following scenarios, please indicate which API architecture(s) you would consider. - When developing a service which serves static content through an API","For each of the following scenarios, please indicate which API architecture(s) you would consider. - When developing a very large public web service project","For each of the following scenarios, please indicate which API architecture(s) you would consider. - When developing a medium-sized public web service project","For each of the following scenarios, please indicate which API architecture(s) you would consider. - When developing a very small public web service project","For each of the following scenarios, please indicate which API architecture(s) you would consider. - When developing a very large internal web service project","For each of the following scenarios, please indicate which API architecture(s) you would consider. - When developing a medium-sized internal web service project","For each of the following scenarios, please indicate which API architecture(s) you would consider. - When developing a very small internal web service project",Please specify your agreement with the following statements. - GraphQL APIs make it easier to efficiently request resources,Please specify your agreement with the following statements. - Organizations with public REST APIs could benefit from adopting GraphQL,Please specify your agreement with the following statements. - GraphQL APIs are more maintainable than REST APIs,What level of adoption do you anticipate GraphQL will have in 5 years? (Single Answer),What level of adoption do you anticipate GraphQL will have in 10 years? (Single Answer),What level of adoption do you anticipate REST will have in 5 years? (Single Answer),What level of adoption do you anticipate REST will have in 10 years? (Single Answer)
"{""ImportId"":""startDate"",""timeZone"":""America/Denver""}","{""ImportId"":""endDate"",""timeZone"":""America/Denver""}","{""ImportId"":""progress""}","{""ImportId"":""duration""}","{""ImportId"":""finished""}","{""ImportId"":""recordedDate"",""timeZone"":""America/Denver""}","{""ImportId"":""_recordId""}","{""ImportId"":""distributionChannel""}","{""ImportId"":""userLanguage""}","{""ImportId"":""QID2""}","{""ImportId"":""QID3""}","{""ImportId"":""QID3_5_TEXT""}","{""ImportId"":""QID4""}","{""ImportId"":""QID5""}","{""ImportId"":""QID6""}","{""ImportId"":""QID7""}","{""ImportId"":""QID9_TEXT""}","{""ImportId"":""QID10""}","{""ImportId"":""QID11_TEXT""}","{""ImportId"":""QID12""}","{""ImportId"":""QID13_TEXT""}","{""ImportId"":""QID14""}","{""ImportId"":""QID15_TEXT""}","{""ImportId"":""QID16_1""}","{""ImportId"":""QID16_2""}","{""ImportId"":""QID16_3""}","{""ImportId"":""QID16_4""}","{""ImportId"":""QID16_5""}","{""ImportId"":""QID16_6""}","{""ImportId"":""QID16_7""}","{""ImportId"":""QID16_8""}","{""ImportId"":""QID16_9""}","{""ImportId"":""QID16_10""}","{""ImportId"":""QID16_11""}","{""ImportId"":""QID17_1""}","{""ImportId"":""QID17_2""}","{""ImportId"":""QID17_3""}","{""ImportId"":""QID18""}","{""ImportId"":""QID19""}","{""ImportId"":""QID20""}","{""ImportId"":""QID21""}"
2020-03-09 8:55,2020-03-09 9:02,100,384,TRUE,2020-03-09 9:02,R_3lttSrmkZNpVrmw,anonymous,EN,I consent,Engineer,,1-2 years,I have used it for at least a few months and have successfully completed a small project using it.,I have used it for at least a few months and have successfully completed a small project using it.,"It can reduce overfetching of resources,It can reduce underfecting of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,It is not tied to HTTP,Resources are organized as an object graph,GraphQL APIs have inline documentation,It provides detailed and clear error messages,GraphQL APIs are easy to test,GraphQL resolvers reduce code duplication,It is easy to learn how to write a GraphQL API,It is intuitive to understand how to use a GraphQL API,The GraphiQL schema API explorer,It can improve maintainability,It can improve performance,It is a scalable approach to support many different clients,Its makes product development faster,It provides a built in introspection API",,"Its tooling ecosystem isn’t well developed,It doesn’t provide a way to calculate query complexity,It can cause N+1 problems without providing a way to solve them,It doesn’t provide a caching mechanism,Not all server side libraries are up to date with the GraphQL spec,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge",,"REST has a cache mechanism built in,REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It is performant,It has widespread knowledge,Its  type system is not rigid,HTTP evolution has benefitted REST,It is mature, and battle tested,It is easy to learn,It is intuitive,It is easy to document,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests",,Both,REST,Both,REST,Both,Both,Both,Both,REST,REST,REST,Strongly Agree,Strongly Agree,Agree,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using REST,More adoption – more organizations will be using REST
2020-03-09 9:06,2020-03-09 9:09,100,161,TRUE,2020-03-09 9:09,R_3IYMv5g6wn45gkk,anonymous,EN,I consent,Engineer,,5-10 years,"I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","I have read an article or two about it and understand the basics of what it is, but nothing in depth.","It can reduce overfetching of resources,Resources are organized as an object graph,It is a scalable approach to support many different clients",,GraphQL doesn’t have widespread knowledge,,"It has widespread knowledge,HTTP evolution has benefitted REST,It is mature, and battle tested,It is easy to document,It uses status codes to convey request status",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,It is weakly typed",,GraphQL,REST,GraphQL,Neither,REST,Both,REST,REST,REST,REST,REST,Agree,Agree,,Unknown – I can't anticipate the level of adoption,Unknown – I can't anticipate the level of adoption,Unknown – I can't anticipate the level of adoption,Mass adoption – almost all organizations will be using REST
2020-03-09 9:08,2020-03-09 9:14,100,397,TRUE,2020-03-09 9:14,R_3rZfXTgR8DWju5e,anonymous,EN,I consent,Other (please specify),Solution Architect,5-10 years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.",I have used it for at least a few months and have successfully completed a small project using it.,"It can reduce overfetching of resources,It is a strongly typed protocol language,It has built in type validation,GraphQL APIs have inline documentation,It provides detailed and clear error messages,GraphQL resolvers reduce code duplication,It is intuitive to understand how to use a GraphQL API,The GraphiQL schema API explorer,It can improve maintainability,It is a scalable approach to support many different clients,It is simple,It provides a built in introspection API",,"Its tooling ecosystem isn’t well developed,It can cause N+1 problems without providing a way to solve them,Not all server side libraries are up to date with the GraphQL spec,GraphQL doesn’t have widespread knowledge",,"It has a mature tooling ecosystem,It has widespread knowledge,HTTP evolution has benefitted REST,It is mature, and battle tested,It is easy to learn,It is intuitive,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,It requires significant effort to document ",,Both,REST,GraphQL,REST,REST,Both,REST,REST,GraphQL,GraphQL,REST,Strongly Agree,Strongly Agree,Neutral,More adoption – more organizations will be using GraphQL,Mass adoption – almost all organizations will be using GraphQL ,Same adoption – a similar amount of organizations will be using REST,Less adoption – fewer organizations will be using REST
2020-03-09 9:11,2020-03-09 9:24,100,728,TRUE,2020-03-09 9:24,R_115u2N31GVheSUO,anonymous,EN,I consent,Engineer,,5-10 years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","It can reduce overfetching of resources,It can reduce underfecting of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,Resources are organized as an object graph,The GraphiQL schema API explorer,It can improve performance,Its makes product development faster,It has a strong ecosystem of client side libraries (Apollo, Relay, ...)",,"It can cause N+1 problems without providing a way to solve them,GraphQL doesn’t have widespread knowledge",,"It has widespread knowledge,It uses status codes to convey request status,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests,It requires significant effort to document ,Other(s)? (Please specify in a text area on the next page)","(I believe this should say ""weakness of REST"")

REST client-side tooling is haphazard, ranging from unopinionated to overly complicated/too far reaching. This leads to a widespread understanding of REST, how to use REST, or what ""proper"" REST is.

There is no one source-of-truth spec doc for REST

GraphQL's client-side tooling is more opinionated, resulting in more uniform usage and understanding of GraphQL.
GraphQL's spec is published publicly, as a single source of truth.",Both,Both,Both,GraphQL,Neither,Both,Both,GraphQL,Both,Both,GraphQL,Strongly Agree,Agree,Neutral,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-09 9:19,2020-03-09 9:26,100,404,TRUE,2020-03-09 9:26,R_yKoMDSf858x6clb,anonymous,EN,I consent,Engineer,,10+ years,"I am a local expert, with many years of solid experience. People across the company come to me with their questions.","I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","It can reduce overfetching of resources,It is a strongly typed protocol language,It has built in type validation,GraphQL APIs have inline documentation",,"Its tooling ecosystem isn’t well developed,It doesn’t provide a way to calculate query complexity,Not all server side libraries are up to date with the GraphQL spec,Learning GraphQL requires a time investment,It has high overhead",,"REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It is performant,It has widespread knowledge,It is mature, and battle tested,It is intuitive,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users can’t avoid overfetching,API users might need to make multiple round trip requests",,REST,Neither,REST,REST,,REST,REST,REST,REST,REST,REST,Neutral,Disagree,Strongly Disagree,More adoption – more organizations will be using GraphQL,Unknown – I can't anticipate the level of adoption,More adoption – more organizations will be using REST,More adoption – more organizations will be using REST
2020-03-09 9:22,2020-03-09 9:27,100,289,TRUE,2020-03-09 9:27,R_11ZR8j8K0ZPbyK5,anonymous,EN,I consent,Engineering Manager,,5-10 years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","It can reduce overfetching of resources,It is a strongly typed protocol language,It has built in type validation,Resources are organized as an object graph,The GraphiQL schema API explorer,It can improve performance,It is a scalable approach to support many different clients,Its makes product development faster,It has a strong ecosystem of client side libraries (Apollo, Relay, ...)",,"It doesn’t provide a way to calculate query complexity,Learning GraphQL requires a time investment",,"It has a mature tooling ecosystem,It is mature, and battle tested,It is easy to learn,It uses status codes to convey request status,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users can’t avoid overfetching,API users might need to make multiple round trip requests",,GraphQL,REST,GraphQL,Neither,REST,REST,Both,Both,REST,REST,REST,Agree,Strongly Agree,Neutral,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Less adoption – fewer organizations will be using REST
2020-03-09 9:21,2020-03-09 9:27,100,379,TRUE,2020-03-09 9:27,R_bJaKDJGrZawTq13,anonymous,EN,I consent,Engineer,,2-5 years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","It can reduce overfetching of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,Resources are organized as an object graph,The GraphiQL schema API explorer,It is a scalable approach to support many different clients",,"Its tooling ecosystem isn’t well developed,It can cause N+1 problems without providing a way to solve them,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge",,"REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It is mature, and battle tested,It uses status codes to convey request status",,"It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users might need to make multiple round trip requests",,GraphQL,Both,GraphQL,REST,Neither,GraphQL,GraphQL,GraphQL,GraphQL,REST,REST,Neutral,Agree,Agree,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-09 9:23,2020-03-09 9:31,100,453,TRUE,2020-03-09 9:31,R_2rUQoACX4gmTEKl,anonymous,EN,I consent,Engineer,,5-10 years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","I have read an in-depth article, primer, or how-to book, and/or have played with it a bit.",,,"It doesn’t provide a way to calculate query complexity,It can cause N+1 problems without providing a way to solve them,It doesn’t provide a caching mechanism,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge,It has high overhead",,"REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It has widespread knowledge,Its  type system is not rigid,HTTP evolution has benefitted REST,It is mature, and battle tested,It is easy to learn,It is intuitive,It is easy to document,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests",,REST,REST,REST,REST,REST,REST,REST,REST,REST,REST,REST,Neutral,Neutral,Disagree,Same adoption – a similar amount of organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-09 9:24,2020-03-09 9:34,100,577,TRUE,2020-03-09 9:34,R_21ccT1F7WkKORaY,anonymous,EN,I consent,Engineer,,5-10 years,"I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","It can reduce overfetching of resources,It has built in type validation,Resources are organized as an object graph,GraphQL APIs have inline documentation,GraphQL APIs are easy to test,GraphQL resolvers reduce code duplication,The GraphiQL schema API explorer,It is a scalable approach to support many different clients",,"Its tooling ecosystem isn’t well developed,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge",,"REST has a cache mechanism built in,It has a mature tooling ecosystem,It has widespread knowledge,Knowledge about REST is widespread",,"It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users can’t avoid overfetching,API users might need to make multiple round trip requests,It requires significant effort to document ",,GraphQL,GraphQL,GraphQL,GraphQL,GraphQL,GraphQL,GraphQL,GraphQL,Neither,Neither,Neither,Strongly Agree,Agree,Neutral,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-09 9:26,2020-03-09 9:53,100,1634,TRUE,2020-03-09 9:53,R_2CgkyhMioEHcWAO,anonymous,EN,I consent,Engineer,,5-10 years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.",I have used it for at least a few months and have successfully completed a small project using it.,"It can reduce overfetching of resources,It can reduce underfecting of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,GraphQL APIs have inline documentation,The GraphiQL schema API explorer",,"Its tooling ecosystem isn’t well developed,It doesn’t provide a way to calculate query complexity,It can cause N+1 problems without providing a way to solve them,It doesn’t provide a caching mechanism,Not all server side libraries are up to date with the GraphQL spec,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge,It has high overhead",,"REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It has widespread knowledge,HTTP evolution has benefitted REST,It is mature, and battle tested,It is easy to learn,It is intuitive,It is easy to document,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"It is weakly typed,API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests,It requires significant effort to document ",,Both,REST,Both,Neither,Both,Both,Both,Both,Both,Both,Both,Neutral,Neutral,Disagree,Same adoption – a similar amount of organizations will be using GraphQL,Less adoption – fewer organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,More adoption – more organizations will be using REST
2020-03-09 9:47,2020-03-09 9:54,100,400,TRUE,2020-03-09 9:54,R_2fJqdvoXp5lAAFr,anonymous,EN,I consent,Engineer,,2-5 years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","It can reduce overfetching of resources,It can reduce underfecting of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,GraphQL APIs have inline documentation,The GraphiQL schema API explorer,It is a scalable approach to support many different clients,It provides a built in introspection API,It has a strong ecosystem of client side libraries (Apollo, Relay, ...)",,"It can cause N+1 problems without providing a way to solve them,Not all server side libraries are up to date with the GraphQL spec,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge,It has high overhead",,"REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It is performant,It has widespread knowledge,It is easy to learn,It uses status codes to convey request status,Knowledge about REST is widespread",,"It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users might need to make multiple round trip requests,It requires significant effort to document ",,REST,Both,Both,GraphQL,REST,Both,Both,REST,Both,GraphQL,REST,Agree,Agree,Agree,More adoption – more organizations will be using GraphQL,Unknown – I can't anticipate the level of adoption,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-09 9:42,2020-03-09 9:59,100,1019,TRUE,2020-03-09 9:59,R_3RsJfjUhJtUxlus,anonymous,EN,I consent,Engineer,,10+ years,"I am a local expert, with many years of solid experience. People across the company come to me with their questions.","I have read an article or two about it and understand the basics of what it is, but nothing in depth.","It can reduce overfetching of resources,It can reduce underfecting of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language",,"It doesn’t provide a way to calculate query complexity,It can cause N+1 problems without providing a way to solve them,Not all server side libraries are up to date with the GraphQL spec,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge,It has high overhead,Other(s)? (Please specify in a text area on the next page)","It's INCREDIBLY hard to learn. It's a pain in the ass to test. People seem to think that GraphQL is intended to used to expose a multi-purpose API. At GitHub, at least, it adds a ton of unnecessary complexity, and they reinvented promises instead of upstreaming the minimum necessary batching logic into ActiveRecord. I wish GraphQL were only used to create page-specific queries for mobile.","It has a mature tooling ecosystem,It is easy to learn,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests,Other(s)? (Please specify in a text area on the next page)","There's nothing inherently about REST (or GraphQL) that saves us from stupidity. People implement slow, overly complex things no matter what tools you give them. It's not a technical problem. REST is a perfectly reasonable tool. So is GraphQL. They just aren't intended to solve the same problem.",REST,REST,REST,Both,REST,REST,REST,REST,REST,REST,REST,Strongly Agree,Neutral,Strongly Disagree,Unknown – I can't anticipate the level of adoption,Unknown – I can't anticipate the level of adoption,Same adoption – a similar amount of organizations will be using REST,Unknown – I can't anticipate the level of adoption
2020-03-09 9:56,2020-03-09 10:04,100,459,TRUE,2020-03-09 10:04,R_2AMTHCPL7ZPa81Y,anonymous,EN,I consent,Engineer,,2-5 years,"I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","I have heard little about it, but don’t know much.","It can reduce overfetching of resources,It can reduce the need for making round trip requests,Resources are organized as an object graph,It can improve performance,It is a scalable approach to support many different clients",,"It doesn’t provide a way to calculate query complexity,Learning GraphQL requires a time investment",,"REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It has widespread knowledge,It is mature, and battle tested,It is easy to learn,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,API users can’t avoid overfetching,API users might need to make multiple round trip requests",,Both,REST,REST,Neither,REST,Both,REST,REST,GraphQL,Both,REST,Agree,Agree,Neutral,More adoption – more organizations will be using GraphQL,Unknown – I can't anticipate the level of adoption,Mass adoption – almost all organizations will be using REST,Unknown – I can't anticipate the level of adoption
2020-03-09 9:39,2020-03-09 10:08,100,1722,TRUE,2020-03-09 10:08,R_30c65433BpoAtPi,anonymous,EN,I consent,Engineer,,10+ years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","It is a strongly typed protocol language,It has built in type validation,GraphQL APIs have inline documentation,It provides detailed and clear error messages,It is intuitive to understand how to use a GraphQL API,The GraphiQL schema API explorer,It has a strong ecosystem of client side libraries (Apollo, Relay, ...)",,"Its tooling ecosystem isn’t well developed,It can cause N+1 problems without providing a way to solve them,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge",,"REST has a cache mechanism built in,REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It has widespread knowledge,HTTP evolution has benefitted REST,It is mature, and battle tested,It is easy to learn,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"It is weakly typed,API users might need to make multiple round trip requests,It uses status codes to convey request status,It requires significant effort to document ",,Both,Both,GraphQL,Both,REST,GraphQL,Both,REST,Both,Both,Both,Neutral,Neutral,Disagree,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-09 10:04,2020-03-09 10:10,100,357,TRUE,2020-03-09 10:10,R_2Qhd9B7saj8HPfi,anonymous,EN,I consent,Engineer,,10+ years,"I am a local expert, with many years of solid experience. People across the company come to me with their questions.","I am a local expert, with many years of solid experience. People across the company come to me with their questions.","It can reduce overfetching of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,It is not tied to HTTP,Resources are organized as an object graph,GraphQL APIs have inline documentation,It provides detailed and clear error messages,GraphQL APIs are easy to test,It is intuitive to understand how to use a GraphQL API,It can improve maintainability,It is a scalable approach to support many different clients,Its makes product development faster,It provides a built in introspection API,It has a strong ecosystem of client side libraries (Apollo, Relay, ...)",,"Not all server side libraries are up to date with the GraphQL spec,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge",,"It has widespread knowledge,It is mature, and battle tested,It is easy to learn",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests,It uses status codes to convey request status,It requires significant effort to document ",,Both,Both,Both,GraphQL,Both,Both,Both,Both,Both,Both,Both,Agree,Agree,Neutral,More adoption – more organizations will be using GraphQL,Mass adoption – almost all organizations will be using GraphQL ,Same adoption – a similar amount of organizations will be using REST,Less adoption – fewer organizations will be using REST
2020-03-09 10:11,2020-03-09 10:16,100,310,TRUE,2020-03-09 10:16,R_XkaSKl32jioy265,anonymous,EN,I consent,Engineer,,2-5 years,"I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","It can reduce overfetching of resources,It can reduce underfecting of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,The GraphiQL schema API explorer",,"It doesn’t provide a way to calculate query complexity,It can cause N+1 problems without providing a way to solve them,It has high overhead",,"REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It has widespread knowledge,It is mature, and battle tested,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,API users might need to make multiple round trip requests",,Both,Both,Both,Both,Both,Both,Both,Both,Both,Both,Both,Neutral,Neutral,Agree,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using REST,More adoption – more organizations will be using REST
2020-03-09 9:27,2020-03-09 10:21,100,3200,TRUE,2020-03-09 10:21,R_2xxvGkO1cIjmbK0,anonymous,EN,I consent,Engineering Manager,,10+ years,"I am a local expert, with many years of solid experience. People across the company come to me with their questions.","I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","It can reduce overfetching of resources,It can reduce underfecting of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,The GraphiQL schema API explorer,It provides a built in introspection API,It has a strong ecosystem of client side libraries (Apollo, Relay, ...)",,"It can cause N+1 problems without providing a way to solve them,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge,Other(s)? (Please specify in a text area on the next page)","It's often assumed in the talks, libraries etc, that you own the backend and client side of the GraphQL exchange. That is not always the case. In this case, you need to think about the interface from an external point of view just like REST. I don't believe enough folks do this.","REST has a cache mechanism built in,REST is built upon HTTP, so only an HTTP library is needed,It has widespread knowledge,It is mature, and battle tested,It is easy to learn,It is intuitive,It is easy to document,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"It is weakly typed,API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests",,Both,Both,Both,Both,GraphQL,Both,Both,Both,Both,Both,Both,Agree,Neutral,Neutral,Same adoption – a similar amount of organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-09 10:54,2020-03-09 11:01,100,421,TRUE,2020-03-09 11:01,R_1Iy099C1jxHtQlH,anonymous,EN,I consent,Engineer,,10+ years,"I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","It can reduce overfetching of resources,It can reduce underfecting of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,It is not tied to HTTP,Resources are organized as an object graph,GraphQL APIs have inline documentation,It is intuitive to understand how to use a GraphQL API,The GraphiQL schema API explorer,It is a scalable approach to support many different clients,Its makes product development faster,It provides a built in introspection API,It has a strong ecosystem of client side libraries (Apollo, Relay, ...)",,"It can cause N+1 problems without providing a way to solve them,Not all server side libraries are up to date with the GraphQL spec,It has high overhead",,"REST has a cache mechanism built in,REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It is performant,It is mature, and battle tested,It is easy to learn,It is intuitive,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests,It requires significant effort to document ",,Both,Neither,Both,REST,REST,GraphQL,Both,Both,Neither,Both,Neither,Agree,Strongly Agree,Disagree,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,Less adoption – fewer organizations will be using REST,None adoption – all organizations will have stopped using REST
2020-03-09 11:08,2020-03-09 11:13,100,317,TRUE,2020-03-09 11:13,R_2zCKmectGlrFtRW,anonymous,EN,I consent,Engineer,,10+ years,"I am a local expert, with many years of solid experience. People across the company come to me with their questions.","I am a local expert, with many years of solid experience. People across the company come to me with their questions.","It can reduce overfetching of resources,It can reduce underfecting of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,It is not tied to HTTP,Resources are organized as an object graph,GraphQL APIs have inline documentation,It provides detailed and clear error messages,It is easy to learn how to write a GraphQL API,It is a scalable approach to support many different clients,It provides a built in introspection API",,"It can cause N+1 problems without providing a way to solve them,GraphQL doesn’t have widespread knowledge,It has high overhead",,"REST is built upon HTTP, so only an HTTP library is needed,It is performant,It has widespread knowledge,Its  type system is not rigid,It is easy to learn,It is intuitive,It uses status codes to convey request status,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests,It uses status codes to convey request status,It requires significant effort to document ",,REST,Neither,REST,Neither,Neither,REST,REST,REST,Neither,Neither,Neither,Neutral,Disagree,Disagree,Less adoption – fewer organizations will be using GraphQL,None adoption – all organizations will have stopped using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-09 9:55,2020-03-09 11:39,100,6245,TRUE,2020-03-09 11:39,R_2Pjn0ho8ka5wyx8,anonymous,EN,I consent,Engineer,,10+ years,"I am a local expert, with many years of solid experience. People across the company come to me with their questions.",I have used it for at least a few months and have successfully completed a small project using it.,"It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,Resources are organized as an object graph,GraphQL APIs have inline documentation,The GraphiQL schema API explorer",,"Its tooling ecosystem isn’t well developed,Learning GraphQL requires a time investment,Other(s)? (Please specify in a text area on the next page)",The mental overhead ,Other(s)? (Please specify in a text area on the next page),I do not think REST is well understood and developers tend to implement Resource Oriented APIs instead of RESTful architectures.  ,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,It requires significant effort to document ",,REST,Neither,Neither,Neither,REST,REST,REST,REST,Neither,Neither,Neither,Disagree,Neutral,Neutral,Same adoption – a similar amount of organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-09 12:09,2020-03-09 12:12,100,188,TRUE,2020-03-09 12:12,R_2WDyk9KE5VoPxME,anonymous,EN,I consent,Engineer,,5-10 years,"I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.",I have used it for at least a few months and have successfully completed a small project using it.,"It can reduce the need for making round trip requests,Resources are organized as an object graph,GraphQL APIs have inline documentation,It provides detailed and clear error messages,It provides a built in introspection API",,"Learning GraphQL requires a time investment,It has high overhead",,"REST is built upon HTTP, so only an HTTP library is needed,It has widespread knowledge,It is intuitive,It uses status codes to convey request status,Knowledge about REST is widespread",,"It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests",,Both,GraphQL,REST,REST,REST,REST,Both,Both,Both,Both,Both,Agree,Agree,Neutral,Same adoption – a similar amount of organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-09 10:03,2020-03-09 12:33,100,8995,TRUE,2020-03-09 12:33,R_1HnRdDIppYvdszu,anonymous,EN,I consent,Engineer,,5-10 years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.",I have used it for at least a few months and have successfully completed a small project using it.,"It can reduce the need for making round trip requests,It is a strongly typed protocol language,Resources are organized as an object graph,GraphQL resolvers reduce code duplication,The GraphiQL schema API explorer,It can improve performance,It is a scalable approach to support many different clients",,"Its tooling ecosystem isn’t well developed,It doesn’t provide a caching mechanism,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge,It has high overhead",,"REST has a cache mechanism built in,REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It has widespread knowledge,HTTP evolution has benefitted REST,It is mature, and battle tested,It is easy to learn,It is intuitive,It uses status codes to convey request status,It has a strong ecosystem of libraries",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests,It requires significant effort to document ",,Both,REST,REST,Both,REST,Both,Both,REST,REST,Both,REST,Neutral,Neutral,Disagree,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Less adoption – fewer organizations will be using REST
2020-03-09 13:42,2020-03-09 14:10,100,1647,TRUE,2020-03-09 14:10,R_3nViTDN7hv2UYXk,anonymous,EN,I consent,Engineer,,10+ years,"I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","It can reduce overfetching of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,It has a strong ecosystem of client side libraries (Apollo, Relay, ...)",,"Its tooling ecosystem isn’t well developed,It doesn’t provide a way to calculate query complexity,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge",,"REST has a cache mechanism built in,REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,HTTP evolution has benefitted REST,It is easy to learn,It has a strong ecosystem of libraries",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,API users might need to make multiple round trip requests,It requires significant effort to document ",,REST,Both,Both,REST,Both,REST,Both,Both,REST,Both,Both,Agree,Disagree,Neutral,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using REST,More adoption – more organizations will be using REST
2020-03-09 11:38,2020-03-09 16:22,100,17063,TRUE,2020-03-09 16:22,R_1eQaWhAdM5T7UBZ,anonymous,EN,I consent,Engineer,,5-10 years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","I have read an in-depth article, primer, or how-to book, and/or have played with it a bit.","It can reduce overfetching of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,Resources are organized as an object graph,It is easy to learn how to write a GraphQL API,It can improve performance,It has a strong ecosystem of client side libraries (Apollo, Relay, ...)",,"Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge,Other(s)? (Please specify in a text area on the next page)","Difficult to migrate an existing project to use GraphQL instead of REST.

Hard to find devs who are already knowledgeable with it.","REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It is performant,It has widespread knowledge,Its  type system is not rigid,It is mature, and battle tested,It is easy to learn,It is intuitive,It is easy to document,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread,Other(s)? (Please specify in a text area on the next page)",Most existing projects already use it and so no need to migrate.,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users might need to make multiple round trip requests,Other(s)? (Please specify in a text area on the next page)",It's hard to enforce that developers use REST in the correct way.,REST,Both,Both,REST,REST,REST,REST,Both,REST,Both,Both,Agree,Agree,Neutral,More adoption – more organizations will be using GraphQL,Unknown – I can't anticipate the level of adoption,Same adoption – a similar amount of organizations will be using REST,Less adoption – fewer organizations will be using REST
2020-03-09 17:40,2020-03-09 17:44,100,230,TRUE,2020-03-09 17:44,R_3h3WID8eUfT96aB,anonymous,EN,I consent,Engineer,,10+ years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,Resources are organized as an object graph,GraphQL APIs have inline documentation,The GraphiQL schema API explorer,It is a scalable approach to support many different clients",,"Its tooling ecosystem isn’t well developed,It doesn’t provide a way to calculate query complexity,It can cause N+1 problems without providing a way to solve them,It doesn’t provide a caching mechanism,Not all server side libraries are up to date with the GraphQL spec,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge",,"REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It is performant,It has widespread knowledge,It is mature, and battle tested,It is easy to learn,Knowledge about REST is widespread",,"It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users might need to make multiple round trip requests,It uses status codes to convey request status",,Both,Both,Both,Neither,REST,REST,REST,Both,Both,Both,Both,Neutral,Neutral,Disagree,Same adoption – a similar amount of organizations will be using GraphQL,None adoption – all organizations will have stopped using GraphQL,Less adoption – fewer organizations will be using REST,None adoption – all organizations will have stopped using REST
2020-03-09 18:48,2020-03-09 18:59,100,653,TRUE,2020-03-09 18:59,R_1E0BduykWlg89Gy,anonymous,EN,I consent,Technical Writer,,5-10 years,"I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","I have read an in-depth article, primer, or how-to book, and/or have played with it a bit.","It can reduce the need for making round trip requests,It is not tied to HTTP,GraphQL APIs have inline documentation,It provides detailed and clear error messages,The GraphiQL schema API explorer",,"Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge",,"REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It has widespread knowledge,It is mature, and battle tested,It is easy to learn,It is intuitive,It uses status codes to convey request status,Knowledge about REST is widespread",,"It is up to the developer to ensure that REST is implemented correctly,API users might need to make multiple round trip requests,It requires significant effort to document ",,REST,Both,Both,REST,Both,Both,Both,REST,Neither,Neither,Neither,Neutral,Agree,Agree,More adoption – more organizations will be using GraphQL,Unknown – I can't anticipate the level of adoption,Same adoption – a similar amount of organizations will be using REST,Unknown – I can't anticipate the level of adoption
2020-03-10 7:10,2020-03-10 7:16,100,355,TRUE,2020-03-10 7:16,R_WupmPXEKrLhyZHP,anonymous,EN,I consent,Engineer,,10+ years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","It can reduce overfetching of resources,It is a strongly typed protocol language,It has built in type validation,GraphQL APIs have inline documentation,It is a scalable approach to support many different clients",,"Its tooling ecosystem isn’t well developed,It doesn’t provide a way to calculate query complexity,It can cause N+1 problems without providing a way to solve them,It doesn’t provide a caching mechanism,Not all server side libraries are up to date with the GraphQL spec,Learning GraphQL requires a time investment,It has high overhead",,"REST has a cache mechanism built in,It has a mature tooling ecosystem,It is performant,It has widespread knowledge,Its  type system is not rigid,It is mature, and battle tested,It is easy to learn,It is intuitive,It is easy to document,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests",,REST,REST,REST,REST,REST,REST,REST,REST,REST,REST,REST,Neutral,Disagree,Strongly Disagree,Same adoption – a similar amount of organizations will be using GraphQL,Less adoption – fewer organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-10 7:22,2020-03-10 7:29,100,437,TRUE,2020-03-10 7:29,R_3IVJi4SQp4XcvbT,anonymous,EN,I consent,Engineer,,10+ years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.",I have used it for at least a few months and have successfully completed a small project using it.,,,"It can cause N+1 problems without providing a way to solve them,It doesn’t provide a caching mechanism,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge,It has high overhead,Other(s)? (Please specify in a text area on the next page)","I'm not sure if it's just our app or all GraphQL but there are huge performance hits due to using GraphQL. We have many N+1's, boot time of the application is slowed drastically by GraphQL, and if GraphQL is supposed to fetch less resources than REST, our app isn't accomplishing that.","REST has a cache mechanism built in,It has a mature tooling ecosystem,It has widespread knowledge,Its  type system is not rigid,It is easy to learn,It is intuitive,Knowledge about REST is widespread",,Other(s)? (Please specify in a text area on the next page),The biggest downside for me with REST is the versioning. ,REST,REST,REST,REST,REST,REST,REST,REST,REST,REST,REST,Strongly Disagree,Disagree,Neutral,Less adoption – fewer organizations will be using GraphQL,Less adoption – fewer organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-10 12:03,2020-03-10 12:10,100,406,TRUE,2020-03-10 12:10,R_cwIJ4TDhyyzWvfP,anonymous,EN,I consent,Engineer,,10+ years,"I am a local expert, with many years of solid experience. People across the company come to me with their questions.","I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","It can reduce overfetching of resources,It can reduce underfecting of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It is not tied to HTTP,Resources are organized as an object graph,GraphQL APIs have inline documentation,It provides detailed and clear error messages,The GraphiQL schema API explorer,It can improve maintainability,It can improve performance,It is a scalable approach to support many different clients,It provides a built in introspection API,It has a strong ecosystem of client side libraries (Apollo, Relay, ...)",,"It can cause N+1 problems without providing a way to solve them,Learning GraphQL requires a time investment",,"REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It is performant,It has widespread knowledge,It is mature, and battle tested,It is easy to learn,It is intuitive,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests,It requires significant effort to document ",,REST,GraphQL,GraphQL,Neither,REST,Both,Both,REST,Both,Both,REST,Strongly Agree,Agree,Strongly Agree,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using REST,More adoption – more organizations will be using REST
2020-03-10 12:09,2020-03-10 12:15,100,339,TRUE,2020-03-10 12:15,R_vkkeQ0vuNgKU6ch,anonymous,EN,I consent,Engineer,,10+ years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","It can reduce overfetching of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It is not tied to HTTP,Resources are organized as an object graph,GraphQL APIs have inline documentation,GraphQL resolvers reduce code duplication,It is intuitive to understand how to use a GraphQL API,The GraphiQL schema API explorer,It can improve maintainability,It can improve performance,Its makes product development faster,It has a strong ecosystem of client side libraries (Apollo, Relay, ...)",,"It doesn’t provide a way to calculate query complexity,It can cause N+1 problems without providing a way to solve them,It doesn’t provide a caching mechanism",,"REST has a cache mechanism built in,It has widespread knowledge,It is mature, and battle tested,It is easy to learn,It is intuitive,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users can’t avoid underfecthing,API users might need to make multiple round trip requests,It requires significant effort to document ",,Both,Both,Both,Both,Both,Both,Both,Both,Both,Both,Both,Agree,Agree,Agree,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,Less adoption – fewer organizations will be using REST,Less adoption – fewer organizations will be using REST
2020-03-09 9:54,2020-03-10 14:09,100,101683,TRUE,2020-03-10 14:09,R_2B5qkQN9jqU0lCH,anonymous,EN,I consent,Engineer,,1-2 years,"I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","I have read an in-depth article, primer, or how-to book, and/or have played with it a bit.","It can reduce overfetching of resources,It has built in type validation,Resources are organized as an object graph,The GraphiQL schema API explorer",,"Its tooling ecosystem isn’t well developed,It doesn’t provide a way to calculate query complexity,Not all server side libraries are up to date with the GraphQL spec,GraphQL doesn’t have widespread knowledge",,"It has a mature tooling ecosystem,It has widespread knowledge,It is mature, and battle tested,It is easy to learn,It is intuitive,It is easy to document,Knowledge about REST is widespread",,"It is up to the developer to ensure that REST is implemented correctly,API users can’t avoid overfetching,API users might need to make multiple round trip requests",,REST,GraphQL,REST,REST,REST,REST,REST,REST,REST,GraphQL,GraphQL,Strongly Agree,Neutral,Neutral,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-10 15:03,2020-03-10 15:09,100,393,TRUE,2020-03-10 15:09,R_2Pp56AcN89DoLDL,anonymous,EN,I consent,Engineer,,10+ years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","It can reduce overfetching of resources,It can reduce the need for making round trip requests,It is a strongly typed protocol language,It has built in type validation,Resources are organized as an object graph,GraphQL APIs have inline documentation,GraphQL resolvers reduce code duplication,It is easy to learn how to write a GraphQL API,The GraphiQL schema API explorer,It can improve maintainability,It can improve performance,Its makes product development faster",,"It doesn’t provide a caching mechanism,Learning GraphQL requires a time investment",,"REST has a cache mechanism built in,REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It has widespread knowledge,HTTP evolution has benefitted REST,It is mature, and battle tested,It is easy to learn,It uses status codes to convey request status,Knowledge about REST is widespread",,"It is up to the developer to ensure that REST is implemented correctly,API users might need to make multiple round trip requests",,Both,GraphQL,Both,GraphQL,Both,Both,Both,GraphQL,GraphQL,GraphQL,GraphQL,Agree,Neutral,Agree,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using REST,More adoption – more organizations will be using REST
2020-03-11 4:08,2020-03-11 4:12,100,229,TRUE,2020-03-11 4:12,R_2eUAwjai1jg682V,anonymous,EN,I consent,Engineer,,10+ years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.","I have read an article or two about it and understand the basics of what it is, but nothing in depth.","It can reduce underfecting of resources,It can reduce the need for making round trip requests,It can improve performance",,"Its tooling ecosystem isn’t well developed,It doesn’t provide a way to calculate query complexity,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge,It has high overhead",,"It has a mature tooling ecosystem,It is performant,It has widespread knowledge,HTTP evolution has benefitted REST,It is mature, and battle tested,It is easy to learn,It is intuitive,It is easy to document,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"It is weakly typed,API users can’t avoid underfecthing,API users might need to make multiple round trip requests",,REST,REST,REST,REST,REST,REST,REST,REST,REST,REST,REST,Neutral,Agree,Neutral,Less adoption – fewer organizations will be using GraphQL,Less adoption – fewer organizations will be using GraphQL,More adoption – more organizations will be using REST,More adoption – more organizations will be using REST
2020-03-11 21:05,2020-03-11 21:09,100,271,TRUE,2020-03-11 21:09,R_57uXiTSKgVwuOjv,anonymous,EN,I consent,Engineer,,10+ years,"I am a local expert, with many years of solid experience. People across the company come to me with their questions.",I have used it for at least a few months and have successfully completed a small project using it.,"It can reduce overfetching of resources,It can reduce the need for making round trip requests,GraphQL APIs have inline documentation,The GraphiQL schema API explorer,It can improve performance,It is a scalable approach to support many different clients",,"Its tooling ecosystem isn’t well developed,Not all server side libraries are up to date with the GraphQL spec,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge",,"REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It is performant,It has widespread knowledge,HTTP evolution has benefitted REST,It is mature, and battle tested,It is easy to document,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,API users might need to make multiple round trip requests",,REST,REST,REST,REST,REST,REST,REST,GraphQL,REST,REST,GraphQL,Neutral,Neutral,Neutral,Same adoption – a similar amount of organizations will be using GraphQL,Less adoption – fewer organizations will be using GraphQL,More adoption – more organizations will be using REST,More adoption – more organizations will be using REST
2020-03-12 12:11,2020-03-12 12:19,100,475,TRUE,2020-03-12 12:19,R_bK2D6eUOtLaZahj,anonymous,EN,I consent,Engineer,,5-10 years,"I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.","I have read an in-depth article, primer, or how-to book, and/or have played with it a bit.","It can reduce the need for making round trip requests,It is a strongly typed protocol language,GraphQL APIs have inline documentation,The GraphiQL schema API explorer,Its makes product development faster,It provides a built in introspection API",,"Its tooling ecosystem isn’t well developed,It doesn’t provide a way to calculate query complexity,It can cause N+1 problems without providing a way to solve them,GraphQL doesn’t have widespread knowledge,Other(s)? (Please specify in a text area on the next page)","GraphQL pitches itself as this way to allow for incredible flexibility in how clients query for things, and there's this promise that if you write resolvers for your stuff then it all will just kind of magically work.

But that's really not true! It's very easy to accidentally introduce surprising behavior into your GraphQL API and I have dealt with a number of bugs on the API side where there are weird side effects or when you format a query a certain way the results will be one thing but maybe when you include some other field or order by clause the results will come up entirely different. 

It's nice in theory to have this kind of query flexibility but in practice to truly build something that we have 100% confidence will always return correct results for every query is very hard (maybe this could be made better with tooling).

","REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It has widespread knowledge,HTTP evolution has benefitted REST,It is mature, and battle tested,It is intuitive,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,API users can’t avoid overfetching,API users can’t avoid underfecthing,API users might need to make multiple round trip requests,It requires significant effort to document ",,Both,Neither,Both,Neither,REST,Both,REST,REST,Both,REST,REST,Neutral,Agree,Strongly Disagree,Same adoption – a similar amount of organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-12 15:31,2020-03-12 15:35,100,260,TRUE,2020-03-12 15:35,R_3MKUfV1KRNWOyk6,anonymous,EN,I consent,Engineer,,1-2 years,I have used it for at least a few months and have successfully completed a small project using it.,I have used it for at least a few months and have successfully completed a small project using it.,"It can reduce overfetching of resources,It has built in type validation",,"Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge,It has high overhead",,"It has widespread knowledge,It is mature, and battle tested,It is easy to learn,It is intuitive,It is easy to document,Knowledge about REST is widespread",,"API users can’t avoid overfetching,API users might need to make multiple round trip requests",,Both,REST,Both,REST,Both,Both,REST,REST,Both,REST,REST,Strongly Agree,Neutral,Strongly Disagree,Same adoption – a similar amount of organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-09 16:43,2020-03-12 17:07,100,260652,TRUE,2020-03-12 17:07,R_3Hv6GUsLl6QTxrp,anonymous,EN,I consent,Engineer,,5-10 years,"I have been using it for many years, know all of the basic aspects, and am comfortable using it as a key element in complex projects. People in my group come to me with their questions.",I have used it for at least a few months and have successfully completed a small project using it.,"It can reduce overfetching of resources,It is a strongly typed protocol language,It has built in type validation,It can improve performance",,"It doesn’t provide a way to calculate query complexity,It can cause N+1 problems without providing a way to solve them,Learning GraphQL requires a time investment",,"It has a mature tooling ecosystem,It has widespread knowledge,It is mature, and battle tested,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"It is up to the developer to ensure that REST is implemented correctly,It is weakly typed,API users might need to make multiple round trip requests",,Both,Both,Both,Both,REST,Both,Both,Both,Both,Both,Both,Agree,Neutral,Neutral,More adoption – more organizations will be using GraphQL,More adoption – more organizations will be using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST
2020-03-17 11:39,2020-03-17 11:42,100,212,TRUE,2020-03-17 11:42,R_2DSp0ynlFhIETTv,anonymous,EN,I consent,Engineer,,5-10 years,"I have used it for a year or more on a daily or regular basis, and am comfortable using it in moderately complex projects.",I have used it for at least a few months and have successfully completed a small project using it.,"Resources are organized as an object graph,The GraphiQL schema API explorer",,"Its tooling ecosystem isn’t well developed,It doesn’t provide a way to calculate query complexity,It can cause N+1 problems without providing a way to solve them,It doesn’t provide a caching mechanism,Not all server side libraries are up to date with the GraphQL spec,Learning GraphQL requires a time investment,GraphQL doesn’t have widespread knowledge,It has high overhead,Other(s)? (Please specify in a text area on the next page)",It is fundamentally confusing when applied to resources which are not actually graphs (ie - a GraphQL API applied over a fundamentally relational dataset).,"REST is built upon HTTP, so only an HTTP library is needed,It has a mature tooling ecosystem,It is performant,It has widespread knowledge,Its  type system is not rigid,It is mature, and battle tested,It is easy to learn,It is intuitive,It is easy to document,It uses status codes to convey request status,It has a strong ecosystem of libraries,Knowledge about REST is widespread",,"There is little agreement on what REST is,It is up to the developer to ensure that REST is implemented correctly,API users might need to make multiple round trip requests",,REST,REST,REST,REST,REST,REST,REST,REST,REST,REST,REST,Disagree,Strongly Disagree,Strongly Disagree,Less adoption – fewer organizations will be using GraphQL,None adoption – all organizations will have stopped using GraphQL,Same adoption – a similar amount of organizations will be using REST,Same adoption – a similar amount of organizations will be using REST